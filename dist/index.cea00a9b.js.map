{"mappings":"AAAA,MAAM,OAAO;IACT,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;QACrC,IAAI,CAAC,EAAE,GAAG,EAAE;QACZ,IAAI,CAAC,OAAO,GAAG,OAAO;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK;QAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ;QACxB,IAAI,CAAC,QAAQ,GAAG,KAAK;KACxB;IAED,kEAAkE;IAClE,oBAAoB,GAAE;QAClB,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC;QACxD,cAAc,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;QAC1C,cAAc,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC;QACrD,IAAI,IAAI,CAAC,QAAQ,EACb,cAAc,CAAC,YAAY,CAAC,OAAO,EAAE,gBAAgB,CAAC;QAG1D,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;QAChD,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,oBAAoB,CAAC;QACtD,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC;QAEtC,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC;QAC9C,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK;QAClC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC;QAEjC,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;QACvD,cAAc,CAAC,IAAI,GAAG,QAAQ;QAC9B,cAAc,CAAC,EAAE,GAAG,iBAAiB;QACrC,cAAc,CAAC,WAAW,GAAG,GAAG;QAChC,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC;QAErC,MAAM,SAAS,GAAG,EAAE;QACpB,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;YAC5C,QAAQ,CAAC,WAAW,GAAG,SAAS;YAChC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxB,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC;SACnC;QAED,yBAAyB;QACzB,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;YAC3C,0BAA0B;YAC1B,IAAG,cAAc,CAAC,WAAW,KAAK,GAAG,EAAC;gBAClC,cAAc,CAAC,WAAW,GAAG,GAAG;gBAChC,KAAI,IAAI,CAAC,IAAI,SAAS,CAClB,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ;aAEpC,MAEG;gBACA,cAAc,CAAC,WAAW,GAAG,GAAG;gBAChC,KAAI,IAAI,EAAC,IAAI,SAAS,CAClB,EAAC,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS;aAErC;SACJ,CAAC;QAEF,OAAO,cAAc,CAAA;KACxB;IAED,+CAA+C;IAC/C,oBAAoB,GAAE;QAClB,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC;QACpD,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC;QAEnD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;QACjD,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC;QACpD,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;YAC1C,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;YAChD,OAAO,CAAC,cAAc,EAAE;SAC3B,CAAC;QACF,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK;QAEtC,eAAe,CAAC,WAAW,CAAC,aAAa,CAAC;QAE1C,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC;QAEvC,OAAO,eAAe,CAAA;KACzB;CAEJ;AAED,+CAA+C;AAC/C,IAAI,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC;AAExD,sBAAsB;AACtB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC;AAEtD,2CAA2C;AAC3C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;AAE3C,mCAAmC;AACnC,MAAM,UAAU,GAAG,6rBAA6rB;AAChtB,MAAM,UAAU,GAAG,uSAAuS;AAE1T,uFAAuF;AACvF,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE;IAAC,UAAU;IAAE,UAAU;CAAC,CAAC;AAC5F,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE;IAAC,UAAU;IAAE,UAAU;CAAC,CAAC;AAC5F,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE;IAAC,UAAU;IAAE,UAAU;CAAC,CAAC;AAC5F,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE;IAAC,UAAU;IAAE,UAAU;CAAC,CAAC;AAC5F,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE;IAAC,UAAU;IAAE,UAAU;CAAC,CAAC;AAC5F,MAAM,eAAe,GAAG;IAAC,QAAQ;IAAE,QAAQ;IAAE,QAAQ;IAAE,QAAQ;IAAE,QAAQ;CAAC;AAI1E,6CAA6C;AAC7C,MAAM,YAAY,GAAG,CAAA,OAAO,GAAI;IAC5B,MAAM,IAAI,GAAG,OAAO,CAAC,qBAAqB,EAAE,AAAC;IAC7C,OACI,AAAC,IAAI,CAAC,GAAG,GAAG,GAAG,IAAK,CAAC,IACrB,IAAI,CAAC,IAAI,IAAI,CAAC,IACd,AAAC,IAAI,CAAC,MAAM,GAAG,GAAG,IAAM,CAAA,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAA,AAAC,IACpF,IAAI,CAAC,KAAK,IAAK,CAAA,MAAM,CAAC,UAAU,IAAI,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAG,sBAAsB;IAAzB,CAAA,AAAC,CAC3E;CACL;AAID,uFAAuF;AACvF,MAAM,mBAAmB,GAAG,CAAA,eAAe,GAAI;IAC3C,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAM;QACtC,KAAK,IAAI,OAAO,IAAI,eAAe,CAAC;YAChC,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC;YACvD,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,GAAG,QAAQ,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,IAAG,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAC;gBAC5C,OAAO,CAAC,QAAQ,GAAG,IAAI;gBACvB,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC;YAC3C,6CAA6C;aAChD,MAAI;gBACD,OAAO,CAAC,QAAQ,GAAG,KAAK;gBACxB,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAC9C,4DAA4D;aAC/D;SACJ;KACJ,CAAC;CACL;AAID,uEAAuE;AACvE,MAAM,YAAY,GAAG,CAAA,QAAQ,GAAI;IAC7B,IAAI,WAAW,AAAC;IAChB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAA,CAAC,GAAI;QACnC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC1B,WAAW,GAAG,UAAU,CAAC,IAAM,QAAQ,EAAE,EAAE,GAAG,CAAC;KAChD,EAAE,KAAK,CAAC;CACd;AAID,+CAA+C;AAC/C,MAAM,kBAAkB,GAAG,IAAM;IAC7B,6CAA6C;IAC7C,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAM;QACtC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS;KACtC,CAAC;IAEF,iDAAiD;IACjD,YAAY,CAAC,IAAM;QACf,UAAU,CAAC,IAAM;YACb,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ;SACrC,EAAE,MAAM,CAAC;KACb,CAAC;CACL;AAGD,wCAAwC;AACxC,MAAM,uBAAuB,GAAG,IAAM;IAClC,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;IAC1C,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC;IAExD,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAM;QACtC,IAAI,MAAM,CAAC,OAAO,IAAK,GAAG,CAAC,YAAY,GAAC,CAAC,AAAC,EACtC,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS;aAGlC,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ;KAExC,CAAC;CACL;AAID,sFAAsF;AACtF,MAAM,QAAQ,GAAG,IAAM;IAEnB,KAAK,IAAI,OAAO,IAAI,eAAe,CAAC;QAChC,0BAA0B;QAC1B,MAAM,WAAW,GAAG,OAAO,CAAC,oBAAoB,EAAE;QAClD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAE7B,+CAA+C;QAC/C,MAAM,YAAY,GAAG,OAAO,CAAC,oBAAoB,EAAE;KACtD;IAED,8DAA8D;IAC9D,mBAAmB,CAAC,eAAe,CAAC;IAEpC,2BAA2B;IAC3B,kBAAkB,EAAE;IAEpB,iCAAiC;IACjC,uBAAuB,EAAE;CAC5B;AAID,QAAQ,EAAE","sources":["js/app.js"],"sourcesContent":["class Section{\n    constructor(id, dataNav, title, contents){\n        this.id = id\n        this.dataNav = dataNav\n        this.title = title\n        this.contents = contents\n        this.isActive = false\n    }\n\n    // Create the section html element that will be viewed on the page\n    createContentSection(){\n        const sectionElement = document.createElement('section')\n        sectionElement.setAttribute('id', this.id)\n        sectionElement.setAttribute('data-nav', this.dataNav)\n        if (this.isActive){\n            sectionElement.setAttribute('class', 'active-section')\n        }\n        \n        const divElement = document.createElement('div')\n        divElement.setAttribute('class', 'landing__container')\n        sectionElement.appendChild(divElement)\n\n        const h2Element = document.createElement('h2')\n        h2Element.textContent = this.title\n        divElement.appendChild(h2Element)\n\n        const collapseButton = document.createElement('button')\n        collapseButton.type = 'button'\n        collapseButton.id = 'collapse-button'\n        collapseButton.textContent = '▼'\n        h2Element.appendChild(collapseButton)\n        \n        const pElements = []\n        for(let paragraph of this.contents){\n            const pElement = document.createElement('p')\n            pElement.textContent = paragraph\n            pElements.push(pElement)\n            divElement.appendChild(pElement)\n        }\n\n        // Collpase functionality\n        collapseButton.addEventListener('click', () => {\n            // Uncollapsed => collapse\n            if(collapseButton.textContent === '▼'){\n                collapseButton.textContent = '►'\n                for(let p of pElements){\n                    p.style.visibility = 'hidden'\n                }\n            }\n            // Collapsed => Uncollapsed\n            else{\n                collapseButton.textContent = '▼'\n                for(let p of pElements){\n                    p.style.visibility = 'visible'\n                }\n            }\n        })\n\n        return sectionElement\n    }\n\n    // Add the section anchor to the navigation bar\n    createAnchorInNavbar(){\n        const listItemElement = document.createElement('li')\n        listItemElement.setAttribute('class', 'menu__link')\n\n        const anchorElement = document.createElement('a')\n        anchorElement.setAttribute('id', this.id + 'anchor')\n        anchorElement.addEventListener('click', () => {\n            const section = document.getElementById(this.id)\n            section.scrollIntoView()\n        })\n        anchorElement.textContent = this.title\n\n        listItemElement.appendChild(anchorElement)\n\n        navbarList.appendChild(listItemElement)\n\n        return listItemElement\n    }\n\n}\n\n// Get the list that we will put the anchors in\nlet navbarList = document.getElementById('navbar__list')\n\n// Get the navbar menu\nconst navbar = document.querySelector('.navbar__menu')\n\n// Get the main that we add the sections to\nconst main = document.querySelector('main')\n\n// Fake paragraphs for the sections\nconst paragraph1 = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi fermentum metus faucibus lectus pharetra dapibus. Suspendisse potenti. Aenean aliquam elementum mi, ac euismod augue. Donec eget lacinia ex. Phasellus imperdiet porta orci eget mollis. Sed convallis sollicitudin mauris ac tincidunt. Donec bibendum, nulla eget bibendum consectetur, sem nisi aliquam leo, ut pulvinar quam nunc eu augue. Pellentesque maximus imperdiet elit a pharetra. Duis lectus mi, aliquam in mi quis, aliquam porttitor lacus. Morbi a tincidunt felis. Sed leo nunc, pharetra et elementum non, faucibus vitae elit. Integer nec libero venenatis libero ultricies molestie semper in tellus. Sed congue et odio sed euismod.'\nconst paragraph2 = 'Aliquam a convallis justo. Vivamus venenatis, erat eget pulvinar gravida, ipsum lacus aliquet velit, vel luctus diam ipsum a diam. Cras eu tincidunt arcu, vitae rhoncus purus. Vestibulum fermentum consectetur porttitor. Suspendisse imperdiet porttitor tortor, eget elementum tortor mollis non.'\n\n// Create an array with all the sections that are supposedly fetched from a database xD\nconst section1 = new Section('section1', 'Section 1', 'Section 1', [paragraph1, paragraph2])\nconst section2 = new Section('section2', 'Section 2', 'Section 2', [paragraph1, paragraph2])\nconst section3 = new Section('section3', 'Section 3', 'Section 3', [paragraph1, paragraph2])\nconst section4 = new Section('section4', 'Section 4', 'Section 4', [paragraph1, paragraph2])\nconst section5 = new Section('section5', 'Section 5', 'Section 5', [paragraph1, paragraph2])\nconst contentSections = [section1, section2, section3 ,section4, section5]\n\n\n\n// Determine if an element is in the viewport\nconst isInViewport = element => {\n    const rect = element.getBoundingClientRect();\n    return (\n        (rect.top + 150) >= 0 &&  //is top in viewport\n        rect.left >= 0 &&  //is left in viewport\n        (rect.bottom - 150) <= (window.innerHeight || document.documentElement.clientHeight) &&  //is bottom in viewport\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)  //is right in viewport\n    );\n}\n\n\n\n// Add a scroll event listener to the document to highlight the section in the viewport\nconst activeSectionHandle = contentsections => {\n    document.addEventListener('scroll', () => {\n        for (let section of contentSections){\n            const sectionHTML = document.getElementById(section.id)\n            const anchorHTML = document.getElementById(section.id + 'anchor')\n            console.log(anchorHTML)\n            if(isInViewport(sectionHTML.querySelector('p'))){\n                section.isActive = true\n                sectionHTML.classList.add('active-section')\n                // anchorHTML.style.backgroundColor = 'black'\n            }else{\n                section.isActive = false\n                sectionHTML.classList.remove('active-section')    \n                // anchorHTML.style.backgroundColor = 'transparent'         \n            }\n        }\n    })\n}\n\n\n\n// Helper method that runs a callback method when user stops scrolling \nconst onScrollStop = callback => {\n    let isScrolling;\n    window.addEventListener('scroll', e => {\n        clearTimeout(isScrolling);\n        isScrolling = setTimeout(() => callback(), 150)\n      }, false)\n}\n\n\n\n// Handle showing and hiding the navigation bar\nconst toggleNavbarHandle = () => {\n    // Shows navigation bar when the user scrolls\n    document.addEventListener('scroll', () => {\n        navbar.style.visibility = 'visible'\n    })\n    \n    // Hide navigation bar after user stops scrolling\n    onScrollStop(() => {\n        setTimeout(() => {\n            navbar.style.visibility = 'hidden'\n        }, \"1500\")\n    })\n}\n\n\n// Handle show/hide scroll-to-top button\nconst scrollToTopButtonHandle = () => {\n    const doc = document.querySelector('html')\n    const toTop = document.getElementById('scrollup-button')\n\n    document.addEventListener('scroll', () => {\n        if (window.scrollY >= (doc.clientHeight/2)){\n            toTop.style.visibility = 'visible'\n        }\n        else{\n            toTop.style.visibility = 'hidden'            \n        }        \n    })\n}\n\n\n\n// Populate the page with content sections, anchors, and add necessary event listeners\nconst buildApp = () => {\n\n    for (let section of contentSections){       \n        // Add the section on page\n        const sectionHTML = section.createContentSection()\n        main.appendChild(sectionHTML)\n        \n        // Add the section anchor in the navigation bar\n        const listItemHTML = section.createAnchorInNavbar()     \n    }\n\n    // Add scroll event listener to handle the active section task\n    activeSectionHandle(contentSections)\n\n    // Show/Hide navigation bar\n    toggleNavbarHandle()\n\n    // Show/hide scroll to top button\n    scrollToTopButtonHandle()\n}\n\n\n\nbuildApp()\n"],"names":[],"version":3,"file":"index.cea00a9b.js.map","sourceRoot":"/__parcel_source_root/"}